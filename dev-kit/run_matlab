#!/usr/bin/env bash
#
# _mypackage_run_matlab <command>
#
# Runs a command in a Matlab session with MyProject (and its dev-kit) on the Matlab path.
#
# ENVIRONMENT VARIABLES
#
#   MYPACKAGE_PREFERRED_MATLAB_VERSIONS - a space-separated list of Matlab releases to search for if matlab
#       is not on the path, in order of descending preference.
set -e

locate_matlab () {
  search_order="${MYPACKAGE_PREFERRED_MATLAB_VERSIONS:-R2024b R2024a R2023b R2023a R2022b R2022a R2021b R2021a R2020b R2020a R2019b R2019a R2018b R2018a}"
  if which matlab &>/dev/null; then
    matlab=matlab
  else
    os=$(uname)
    if [[ $os -eq "Darwin" ]]; then
        for rel in $search_order; do
          app_path="/Applications/MATLAB_${rel}.app"
          # echo _mypackage_run_matlab: Checking for $rel at $app_path
          if [[ -e "$app_path" ]]; then
            # echo _mypackage_run_matlab: Found $rel at $app_path
            matlab="$app_path/bin/matlab"
            break
          fi
        done
    else
        for rel in $search_order; do
          app_path="/usr/local/MATLAB/$rel"
          # echo _mypackage_run_matlab: Checking for $rel at $app_path
          if [[ -e "$app_path" ]]; then
            # echo _mypackage_run_matlab: Found $rel at $app_path
            matlab="$app_path/bin/matlab"
            break
          fi
        done
    fi
  fi

  if [[ -z "$matlab" ]]; then
    echo >&2 "_mypackage_run_matlab: Error: matlab is not on the path and it could not be detected."
    exit 1
  fi
}

locate_matlab

devkit_dir="$(dirname "$0")"
reporoot="$(dirname "$devkit_dir")"
matlab -batch "addpath '$reporoot/Mcode'; addpath '${devkit_dir}'; $1"